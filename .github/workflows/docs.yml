name: Build and Deploy Documentation

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/docs.yml'
      - 'requirements-docs.txt'
  pull_request:
    branches:
      - master
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/docs.yml'
      - 'requirements-docs.txt'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-docs.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-docs.txt

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Build documentation
        run: |
          mkdocs build --clean --strict
        env:
          SITE_URL: ${{ steps.pages.outputs.base_url }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./site

  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-docs.txt

      - name: Test build
        run: |
          mkdocs build --clean --strict

      - name: Test serve (dry run)
        run: |
          timeout 10s mkdocs serve --dev-addr=127.0.0.1:8000 || true

      - name: Validate links
        run: |
          # Install linkchecker
          pip install linkchecker
          
          # Build site
          mkdocs build --clean
          
          # Start server in background
          mkdocs serve --dev-addr=127.0.0.1:8000 &
          SERVER_PID=$!
          
          # Wait for server to start
          sleep 5
          
          # Check links (ignore external links for now)
          linkchecker --check-extern=0 http://127.0.0.1:8000/ || true
          
          # Stop server
          kill $SERVER_PID || true
